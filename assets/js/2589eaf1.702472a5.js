"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7982],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7083:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={sidebar_position:1},l="Roster Service",p={unversionedId:"getting-started/roster-service",id:"getting-started/roster-service",isDocsHomePage:!1,title:"Roster Service",description:"Services required",source:"@site/docs/getting-started/roster-service.md",sourceDirName:"getting-started",slug:"/getting-started/roster-service",permalink:"/documentation/docs/getting-started/roster-service",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"Guide",next:{title:"Cognito JWT",permalink:"/documentation/docs/getting-started/cognito-jwt"}},c=[{value:"Services required",id:"services-required",children:[]},{value:"Setting up the service",id:"setting-up-the-service",children:[{value:"Dependencies",id:"dependencies",children:[]},{value:"Application Properties",id:"application-properties",children:[]}]}],u={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"roster-service"},"Roster Service"),(0,o.kt)("h2",{id:"services-required"},"Services required"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"PostgreSQL")," to persist data"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"AWS Cognito")," for JWT authentication and authorization")),(0,o.kt)("h2",{id:"setting-up-the-service"},"Setting up the service"),(0,o.kt)("h3",{id:"dependencies"},"Dependencies"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Git clone this repository into your preferred directory."),(0,o.kt)("li",{parentName:"ol"},"Open ",(0,o.kt)("a",{parentName:"li",href:"https://www.jetbrains.com/idea/"},"IntelliJ"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Go to Files > New > Project From Existing Sources..."),(0,o.kt)("li",{parentName:"ol"},"Choose the roster-service folder that you just cloned. "),(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Import project from External Model")," option and select ",(0,o.kt)("inlineCode",{parentName:"li"},"Maven")))),(0,o.kt)("li",{parentName:"ol"},"IntelliJ should start setting up the dependencies for this service.")),(0,o.kt)("p",null,"Note: Open ",(0,o.kt)("inlineCode",{parentName:"p"},"pom.xml")," in the root folder and check that all dependencies are not throwing error."),(0,o.kt)("p",null,"If you see a red highlighted version number under this dependency, restart your IntelliJ and open this project again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.5.4</version>\n    <relativePath/> \x3c!-- lookup parent from repository --\x3e\n</parent>\n")),(0,o.kt)("h3",{id:"application-properties"},"Application Properties"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"server.port=8080\n\nspring.jpa.database=POSTGRESQL\nspring.datasource.url=jdbc:postgresql://${DATABASE_URL}:${DATABASE_PORT}/${DATABASE_NAME}\nspring.datasource.username=${DATABASE_USERNAME}\nspring.datasource.password=${DATABASE_PASSWORD}\n\nspring.jpa.show-sql=true\nspring.jpa.generate-ddl=true\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true \n\n#aws\naws.access-key=${AWS_ACCESS_KEY}\naws.access-secret=${AWS_SECRET_KEY}\naws.default-region=${AWS_REGION}\n\n#cognito user pool\naws.cognito.clientId=${COGNITO_CLIENT_ID}\naws.cognito.userPoolId=${COGNITO_POOL_ID}\naws.cognito.region=${AWS_REGION}\naws.cognito.connectionTimeout=2000 \naws.cognito.readTimeout=2000\naws.cognito.jwk = https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}/.well-known/jwks.json\n\n#spring security integration with cognito\nspring.security.oauth2.resourceserver.jwt.issuer-uri=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}\nsecurity.oauth2.resource.userInfoUri=https://${COGNITO_DOMAIN}.auth.${AWS_REGION}.amazoncognito.com/oauth2/userInfo\nsecurity.oauth2.resource.tokenInfoUri=https://${COGNITO_DOMAIN}.auth.${AWS_REGION}.amazoncognito.com/oauth2/token\nsecurity.oauth2.resource.jwk.key-set-uri=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}/.well-known/jwks.json\nsecurity.oauth2.client.clientId=${COGNITO_CLIENT_ID}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Environment Variables:")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variables"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"DATABASE_URL")),(0,o.kt)("td",{parentName:"tr",align:null},"This would be your localhost url, for MacOS users you can use ",(0,o.kt)("inlineCode",{parentName:"td"},"host.docker.internal"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"DATABASE_NAME")),(0,o.kt)("td",{parentName:"tr",align:null},"Your PostgreSQL database name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"DATABASE_PORT")),(0,o.kt)("td",{parentName:"tr",align:null},"The port on your PostgreSQL database your are connecting to")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"DATABASE_USERNAME")),(0,o.kt)("td",{parentName:"tr",align:null},"Your PostgreSQL database username")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"DATABASE_PASSWORD")),(0,o.kt)("td",{parentName:"tr",align:null},"Your PostgreSQL database password")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"AWS_ACCESS_KEY")),(0,o.kt)("td",{parentName:"tr",align:null},"Your AWS IAM user Access Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"AWS_SECRET_KEY")),(0,o.kt)("td",{parentName:"tr",align:null},"Your AWS IAM user Secret Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"AWS_REGION")),(0,o.kt)("td",{parentName:"tr",align:null},"The region your Cognito User Pool is in")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"COGNITO_CLIENT_ID")),(0,o.kt)("td",{parentName:"tr",align:null},"The Cognito User Pool Client ID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"COGNITO_POOL_ID")),(0,o.kt)("td",{parentName:"tr",align:null},"The Cognito User Pool  ID")))))}d.isMDXComponent=!0}}]);