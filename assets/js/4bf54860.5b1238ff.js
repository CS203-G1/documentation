"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7964],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),k=d(n),u=r,N=k["".concat(s,".").concat(u)]||k[u]||m[u]||l;return n?a.createElement(N,o(o({ref:t},i),{},{components:n})):a.createElement(N,o({ref:t},i))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7207:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return i},default:function(){return k}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],p={sidebar_position:3},s="Employee",d={unversionedId:"roster-service/employee",id:"roster-service/employee",isDocsHomePage:!1,title:"Employee",description:"Employee Attributes",source:"@site/docs/roster-service/employee.md",sourceDirName:"roster-service",slug:"/roster-service/employee",permalink:"/documentation/docs/roster-service/employee",editUrl:"https://github.com/CS203-G1/documentation/docs/roster-service/employee.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"API References",previous:{title:"Department",permalink:"/documentation/docs/roster-service/department"},next:{title:"Roster Employee",permalink:"/documentation/docs/roster-service/roster_employee"}},i=[{value:"Employee Attributes",id:"employee-attributes",children:[]},{value:"Add Employee",id:"add-employee",children:[{value:"Success Response",id:"success-response",children:[]},{value:"Error Response",id:"error-response",children:[]}]},{value:"Add Employer",id:"add-employer",children:[]},{value:"Add Employee To Work Location",id:"add-employee-to-work-location",children:[{value:"Success Response",id:"success-response-1",children:[]},{value:"Error Response",id:"error-response-1",children:[]}]},{value:"Update Employee",id:"update-employee",children:[{value:"Success Response",id:"success-response-2",children:[]},{value:"Error Response",id:"error-response-2",children:[]}]},{value:"Delete Employee",id:"delete-employee",children:[{value:"Success Response",id:"success-response-3",children:[]},{value:"Error Response",id:"error-response-3",children:[]}]},{value:"Get Employee",id:"get-employee",children:[{value:"Success Response",id:"success-response-4",children:[]},{value:"Error Response",id:"error-response-4",children:[]}]},{value:"Get All Employees from Company",id:"get-all-employees-from-company",children:[{value:"Success Response",id:"success-response-5",children:[]},{value:"Error Response",id:"error-response-5",children:[]}]},{value:"Get Employee Cognito Status",id:"get-employee-cognito-status",children:[{value:"Success Response",id:"success-response-6",children:[]},{value:"Error Response",id:"error-response-6",children:[]}]}],m={toc:i};function k(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"employee"},"Employee"),(0,l.kt)("h2",{id:"employee-attributes"},"Employee Attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Id")),(0,l.kt)("td",{parentName:"tr",align:null},"UUID"),(0,l.kt)("td",{parentName:"tr",align:null},"UUID generated automatically by Spring Boot")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"RosterEmployee")),(0,l.kt)("td",{parentName:"tr",align:null},"Set"),(0,l.kt)("td",{parentName:"tr",align:null},"Set of RosterEmployee objects this Employee is related to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Department")),(0,l.kt)("td",{parentName:"tr",align:null},"Department"),(0,l.kt)("td",{parentName:"tr",align:null},"The department this employee is assigned to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Company")),(0,l.kt)("td",{parentName:"tr",align:null},"Company"),(0,l.kt)("td",{parentName:"tr",align:null},"The company this employee belongs to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Name")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Employee's name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"VaccinationStatus")),(0,l.kt)("td",{parentName:"tr",align:null},"enum"),(0,l.kt)("td",{parentName:"tr",align:null},"Enum type of vaccination status for a particular employee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"VaccinationBrand")),(0,l.kt)("td",{parentName:"tr",align:null},"enum"),(0,l.kt)("td",{parentName:"tr",align:null},"Enum type of the vaccine brand for a particular employee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"HealthStatus")),(0,l.kt)("td",{parentName:"tr",align:null},"enum"),(0,l.kt)("td",{parentName:"tr",align:null},"Current health status of the employee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"IsInCompany")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the employee in the company")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"add-employee"},"Add Employee"),(0,l.kt)("p",null,"Add an Employee that belongs to a Department to the database with basic information "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/departments/{departmentId}/employees"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"POST"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Data constraints")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": "valid email",  \n    "name": "[1 to 30 chars]",\n    "vaccinationStatus": "non-null",\n    "vaccinationBrand": "non-null",\n    "healthStatus": "non-null"\n}\n')),(0,l.kt)("h3",{id:"success-response"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back a representation of the newly added Employee."),(0,l.kt)("p",null,"For a Department with ID ",(0,l.kt)("inlineCode",{parentName:"p"},"a73002eb-becc-411f-9182-e7f01b632632")," and name ",(0,l.kt)("inlineCode",{parentName:"p"},"Employee")," on the local database."),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"id")," is auto-generated and of ",(0,l.kt)("inlineCode",{parentName:"p"},"UUID")," datatype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "a73002eb-becc-411f-9182-e7f01b632632",\n  "email": "sample@example.com",\n  "name": "Employee 1",\n  "vaccinationStatus": "SECOND_DOSE",\n  "vaccinationBrand": "PFIZER",\n  "healthStatus": "HEALTHY"\n}\n\n')),(0,l.kt)("h3",{id:"error-response"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Request Body does not conform to the constraints."),(0,l.kt)("p",null,"For an Employee with a null enum value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "timestamp": "2021-10-03T03:29:23.389+00:00",\n  "status": 400,\n  "error": "Bad Request",\n  "path": "/departments/692b1d0e-fe49-4b05-8b01-f79607da7632/employees"\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"add-employer"},"Add Employer"),(0,l.kt)("p",null,"Add an Employer that belongs to a Department to the database with basic information "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/departments/{departmentId}/employers"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"POST"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_SUPER_USER"))))),(0,l.kt)("p",null,"For request body, sample responses refer to Add Employee."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"add-employee-to-work-location"},"Add Employee To Work Location"),(0,l.kt)("p",null,"Assign a Work Location to a particular Employee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/work-locations/{workLocationId}/employees/{employeeId}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"POST"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("h3",{id:"success-response-1"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back a representation of the newly added Employee."),(0,l.kt)("p",null,"For a Department with ID ",(0,l.kt)("inlineCode",{parentName:"p"},"a73002eb-becc-411f-9182-e7f01b632632")," and name ",(0,l.kt)("inlineCode",{parentName:"p"},"Employee")," on the local database."),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"id")," is auto-generated and of ",(0,l.kt)("inlineCode",{parentName:"p"},"UUID")," datatype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "a73002eb-becc-411f-9182-e7f01b632632",\n  "name": "Employee 1",\n  "vaccinationStatus": "SECOND_DOSE",\n  "vaccinationBrand": "PFIZER",\n  "healthStatus": "HEALTHY"\n}\n\n')),(0,l.kt)("h3",{id:"error-response-1"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Not Found")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when there is no such Work Location found."),(0,l.kt)("p",null,"For a missing Work Location with supposed ID ",(0,l.kt)("inlineCode",{parentName:"p"},"missing-id")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find work location missing-id.\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"update-employee"},"Update Employee"),(0,l.kt)("p",null,"Update an Employee that belongs to a Department to the database with basic information "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/departments/{departmentId}/employees/{employeeId}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PUT"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Data constraints")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "[1 to 30 chars]",\n    "vaccinationStatus": "non-null",\n    "vaccinationBrand": "non-null",\n    "healthStatus": "non-null"\n}\n')),(0,l.kt)("h3",{id:"success-response-2"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back a representation of the newly updated Employee."),(0,l.kt)("p",null,"For a Department with ID ",(0,l.kt)("inlineCode",{parentName:"p"},"a73002eb-becc-411f-9182-e7f01b632632")," and name ",(0,l.kt)("inlineCode",{parentName:"p"},"Employee")," on the local database with updated healthStatus of ",(0,l.kt)("inlineCode",{parentName:"p"},"ILL"),"."),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"id")," is auto-generated and of ",(0,l.kt)("inlineCode",{parentName:"p"},"UUID")," datatype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "a73002eb-becc-411f-9182-e7f01b632632",\n  "name": "Employee 1",\n  "vaccinationStatus": "SECOND_DOSE",\n  "vaccinationBrand": "PFIZER",\n  "healthStatus": "ILL"\n}\n\n')),(0,l.kt)("h3",{id:"error-response-2"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Bad Request")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Department or Employee does not exist in the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find employee <missing-id>\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"delete-employee"},"Delete Employee"),(0,l.kt)("p",null,"Delete a Employee that belongs to a Department using the Employee Id and Department Id"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/api/departments/{departmentId}/employees/{employeeId}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"DELETE"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("h3",{id:"success-response-3"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("h3",{id:"error-response-3"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Not Found")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Department or Employee does not exist in the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find employee <missing-id>\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-employee"},"Get Employee"),(0,l.kt)("p",null,"Get a Employee to the database using the Employee Id and Department Id"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/api/departments/{departmentId}/employees/{employeeId}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"GET"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYEE"))))),(0,l.kt)("h3",{id:"success-response-4"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back a representation of the Employee."),(0,l.kt)("p",null,"For a Department with ID ",(0,l.kt)("inlineCode",{parentName:"p"},"a73002eb-becc-411f-9182-e7f01b632632")," and name ",(0,l.kt)("inlineCode",{parentName:"p"},"Employee")," on the local database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "a73002eb-becc-411f-9182-e7f01b632632",\n  "email": "samples@example.com",\n  "name": "Employee 1",\n  "vaccinationStatus": "SECOND_DOSE",\n  "vaccinationBrand": "PFIZER",\n  "healthStatus": "HEALTHY"\n}\n')),(0,l.kt)("h3",{id:"error-response-4"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Not Found")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Department or Employee does not exist in the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find employee <missing-id>\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-all-employees-from-company"},"Get All Employees from Company"),(0,l.kt)("p",null,"Get all Employees from a Company the database using the Company Id"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/api/companies/{companyId}/employees"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"GET"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("h3",{id:"success-response-5"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an array of representation of the Employees from the Company."),(0,l.kt)("p",null,"For a company with two employees:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": "236935a2-b490-4b2e-8779-efc3e984fb34",\n    "name": "Employee 1",\n    "vaccinationStatus": "SECOND_DOSE",\n    "vaccinationBrand": "PFIZER",\n    "healthStatus": "HEALTHY"\n  },\n  {\n    "id": "b4748ffd-dc09-4ede-b928-dc0ea585f023",\n    "name": "Employee 2",\n    "vaccinationStatus": "SECOND_DOSE",\n    "vaccinationBrand": "PFIZER",\n    "healthStatus": "HEALTHY"\n  }\n]\n')),(0,l.kt)("h3",{id:"error-response-5"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Not Found")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Company does not exist in the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find company <missing-id>\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-employee-cognito-status"},"Get Employee Cognito Status"),(0,l.kt)("p",null,"Get Cognito Status for a particular employee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/api/employees/{employeeId}/cognito-status"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Method")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"GET"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Auth required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Permissions required")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ROLE_EMPLOYER"))))),(0,l.kt)("h3",{id:"success-response-6"},"Success Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back a string that represents the status"),(0,l.kt)("p",null,"For an employee that has been confirmed in the Cognito Pool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"CONFIRMED\n")),(0,l.kt)("p",null,"For more information, please refer to ",(0,l.kt)("a",{parentName:"p",href:"https://javadoc.io/static/com.amazonaws/aws-java-sdk-cognitoidp/1.11.601/com/amazonaws/services/cognitoidp/model/AdminGetUserResult.html#getUserStatus--"},"Java getUserStatus documentations"),"."),(0,l.kt)("h3",{id:"error-response-6"},"Error Response"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code")," : ",(0,l.kt)("inlineCode",{parentName:"p"},"404 Not Found")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Content examples")),(0,l.kt)("p",null,"Response will reflect back an error when the Employee does not exist in the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Could not find employee <missing-id>\n")),(0,l.kt)("hr",null))}k.isMDXComponent=!0}}]);